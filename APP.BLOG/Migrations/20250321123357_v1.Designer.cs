// <auto-generated />
using System;
using APP.BLOG.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APP.BLOG.Migrations
{
    [DbContext(typeof(ProjectsDb))]
    [Migration("20250321123357_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APP.BLOG.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Blog__3214EC073B8EAFE4");

                    b.HasIndex("UserId");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("APP.BLOG.Models.BlogTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__BlogTag__3214EC079AE2F13C");

                    b.HasIndex("BlogId");

                    b.HasIndex("TagId");

                    b.ToTable("BlogTag");
                });

            modelBuilder.Entity("APP.BLOG.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Role__3214EC07B9846CC6");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("APP.BLOG.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Skill__3214EC070184B9E7");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("APP.BLOG.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Tag__3214EC07E91463D2");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("APP.BLOG.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__User__3214EC070DEC3969");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("APP.BLOG.Models.UserSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__UserSkil__3214EC07989B36E6");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSkill");
                });

            modelBuilder.Entity("APP.BLOG.Models.Blog", b =>
                {
                    b.HasOne("APP.BLOG.Models.User", "User")
                        .WithMany("Blogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Blog_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("APP.BLOG.Models.BlogTag", b =>
                {
                    b.HasOne("APP.BLOG.Models.Blog", "Blog")
                        .WithMany("BlogTags")
                        .HasForeignKey("BlogId")
                        .IsRequired()
                        .HasConstraintName("FK_BlogTag_Blog");

                    b.HasOne("APP.BLOG.Models.Tag", "Tag")
                        .WithMany("BlogTags")
                        .HasForeignKey("TagId")
                        .IsRequired()
                        .HasConstraintName("FK_BlogTag_Tag");

                    b.Navigation("Blog");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("APP.BLOG.Models.User", b =>
                {
                    b.HasOne("APP.BLOG.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_User_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("APP.BLOG.Models.UserSkill", b =>
                {
                    b.HasOne("APP.BLOG.Models.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .IsRequired()
                        .HasConstraintName("FK_UserSkill_Skill");

                    b.HasOne("APP.BLOG.Models.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserSkill_User");

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("APP.BLOG.Models.Blog", b =>
                {
                    b.Navigation("BlogTags");
                });

            modelBuilder.Entity("APP.BLOG.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("APP.BLOG.Models.Skill", b =>
                {
                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("APP.BLOG.Models.Tag", b =>
                {
                    b.Navigation("BlogTags");
                });

            modelBuilder.Entity("APP.BLOG.Models.User", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("UserSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
